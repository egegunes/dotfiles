set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'jpalardy/vim-slime'
Plugin 'junegunn/fzf.vim'
Plugin 'junegunn/gv.vim'
Plugin 'mattn/vim-lsp-settings'
Plugin 'mhinz/vim-signify'
Plugin 'prabirshrestha/asyncomplete-lsp.vim'
Plugin 'prabirshrestha/asyncomplete.vim'
Plugin 'prabirshrestha/vim-lsp'
Plugin 'preservim/vimux'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-flagship'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rhubarb'
Plugin 'tpope/vim-surround'

call vundle#end()

highlight Normal ctermbg=black ctermfg=white
highlight LineNr ctermbg=black ctermfg=white
highlight CursorLineNr ctermbg=black ctermfg=yellow
highlight StatusLine ctermbg=black ctermfg=white
highlight Pmenu ctermbg=black ctermfg=yellow
highlight PmenuSel ctermbg=yellow ctermfg=black
highlight Visual ctermbg=yellow ctermfg=black
highlight DiffAdd ctermbg=black ctermfg=green
highlight DiffChange ctermbg=black ctermfg=yellow
highlight DiffDelete ctermbg=black ctermfg=red
highlight diffAdded ctermbg=black ctermfg=green
highlight diffRemoved ctermbg=black ctermfg=red
highlight diffChanged ctermbg=black ctermfg=yellow
highlight diffFile ctermbg=black ctermfg=lightblue
highlight diffOldFile ctermbg=black ctermfg=magenta
highlight ColorColumn ctermbg=grey
highlight SignColumn ctermbg=black
highlight markdownCodeDelimiter ctermbg=black ctermfg=red
highlight markdownHeadingDelimiter ctermbg=black ctermfg=red
highlight markdownH1 ctermbg=black ctermfg=red
highlight markdownH2 ctermbg=black ctermfg=red
highlight markdownH3 ctermbg=black ctermfg=red
highlight markdownH4 ctermbg=black ctermfg=red
highlight markdownH5 ctermbg=black ctermfg=red
highlight markdownH6 ctermbg=black ctermfg=red
highlight ExtraWhitespace ctermbg=red ctermbg=red
match ExtraWhitespace /\s\+$/
autocmd InsertEnter * highlight StatusLine ctermbg=black ctermfg=yellow
autocmd InsertLeave * highlight StatusLine ctermbg=black ctermfg=white
highlight SpellBad ctermbg=red ctermfg=black
highlight SpellRare ctermbg=yellow ctermfg=black
highlight PopupWindow ctermbg=lightblue guibg=lightblue
highlight LspErrorHighlight ctermbg=black ctermfg=red
highlight LspWarningHighlight ctermbg=black ctermfg=yellow
highlight LspInformationHighlight ctermbg=black ctermfg=blue
highlight LspHintHighlight ctermbg=black ctermfg=gray

syntax on
filetype plugin on
filetype indent off
set backspace=eol,indent,start  "allow backspacing over everything in insert mode
set history=1000                "store lots of :cmdline history
set showcmd                     "show incomplete cmds down the bottom
set showmatch                   "show matching braces
set noshowmode                  "don't show mode
set relativenumber              "show relative line numbers
set number                      "show current line number
set incsearch                   "search as characters are entered
set hlsearch                    "highlight searches by default
set ignorecase                  "Ignore case in search patterns
set smartcase                   "don't ignore case when inserting uppercase characters
set nowrap                      "dont wrap lines
set linebreak                   "wrap lines at convenient points
set wildmode=longest,full       "complete longest common string, then each full match
set wildmenu                    "visual auto complete for command menu
set mouse=c                     "disable mouse
set shiftround                  "round to multiple of shift width when adjusting indentation
set shiftwidth=4                "number of spaces for each step of auto indent
set softtabstop=4               "number of spaces per tab when editing
set tabstop=8                   "number of visual spaces per tab
set expandtab                   "tabs are spaces
set lazyredraw
set noundofile
set noswapfile
set rtp+=~/opt/fzf
set rtp+=/usr/local/opt/fzf
set autowrite
set splitright
set splitbelow
set laststatus=2
set showtabline=0
set background=dark
set completeopt=longest,menuone
set conceallevel=0
set updatetime=100
set iskeyword+=\-
set cot+=preview

let mapleader="\<Space>"
let maplocalleader=","

nnoremap <C-p> :Files<CR>
nnoremap <C-]> :Ag<CR>
nnoremap <C-n> :Buffers<CR>
nnoremap <C-t> :Tags<CR>

nnoremap L :bprevious<CR>
nnoremap H :bnext<CR>

nnoremap <Up> <Nop>
nnoremap <Down> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>

nnoremap Ä± i
nnoremap Y y$

nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>t :term<CR>
nnoremap <leader>h :nohlsearch<CR>
nnoremap <leader>c :copen<CR>
nnoremap <leader>x :bdelete<CR>
nnoremap <leader>u :SignifyHunkUndo<CR>

nnoremap <leader>e :Lexplore<CR>
nnoremap <leader>ed :execute 'Lexplore' expand("%:p:h")<CR>

nnoremap <leader>fb :setlocal autoread<CR> :!black %<CR><CR>
nnoremap <leader>fs :setlocal autoread<CR> :!isort %<CR><CR>
nnoremap <leader>fg :setlocal autoread<CR> :!go fmt %<CR><CR>
nnoremap <leader>fi :setlocal autoread<CR> :!goimports -w %<CR><CR>

nnoremap <leader>gb :Git blame<CR>
nnoremap <leader>gd :Gvdiffsplit<CR>
nnoremap <leader>gl :GV<CR>
nnoremap <leader>gc :GV!<CR>

nnoremap <leader>ld :LspDefinition<CR>
nnoremap <leader>lg :LspReferences<CR>
nnoremap <leader>lh :LspHover<CR>
nnoremap <leader>ln :LspNextError<CR>
nnoremap <leader>lp :LspPreviousError<CR>

nnoremap <leader>vi :VimuxInspectRunner<CR>
nnoremap <leader>vl :VimuxRunLastCommand<CR>
nnoremap <leader>vp :VimuxPromptCommand<CR>

nnoremap <C-j> :lnext<CR>
nnoremap <C-k> :lprev<CR>

inoremap jk <esc>
inoremap <C-e> <C-o>$
inoremap <C-a> <C-o>0

if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
endif
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

function! ToggleWrap()
    if &wrap
        setlocal nowrap
    else
        setlocal wrap
    endif
endfunction

nnoremap <leader>r :call ToggleWrap()<CR>

let g:fzf_layout = {'up':'~90%', 'window': { 'width': 1, 'height': 1,'yoffset':0.5,'xoffset': 0.5, 'highlight': 'Todo', 'border': 'sharp' } }
let g:fzf_preview_window = 'up:50%'

let g:slime_target = "tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
let g:slime_default_config = {"socket_name": "default", "target_pane": ":.1"}
let g:slime_python_ipython = 1

let g:lsp_document_highlight_enabled = 0
let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_diagnostics_signs_enabled = 0
let g:lsp_diagnostics_highlights_enabled = 1
